name: $(Build.SourceBranch)-$(date:yyyyMMdd)$(rev:.r)
# Pipeline triggers on any branch and tag
trigger:
  branches:
    include:
      - main
  tags:
    include:
      - "*"
# Pipeline will be run on this base image
pool:
  vmImage: "ubuntu-latest"

# Variables global to this pipeline
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables
variables:
  # Variables defined in Pipelines->Library->Variable Groups in your project in
  # Azure Pipelines
  - group: Hemmeligheter
  # Variables defined here
  - name: appname
    value: freg-quality-metrics
  - name: teamname
    value: freg
  - name: fullSha
    value: "$(Build.SourceVersion)"
  - name: imageName
    value: "eu.gcr.io/prod-bip/ssb/$(teamname)/$(appname)"
  - name: repoName
    value: "prod-bip/ssb/$(teamname)/$(appname)"

resources:
  repositories:
    - repository: templates
      type: github
      name: statisticsnorway/azure-pipelines-templates
      ref: refs/tags/1.1.32
      endpoint: github-freg

# Job which builds Docker image, pushes this to GCR and checks for any image vulnerabilities
jobs:
  - job: buildAndPush
    displayName: "build and push Dockerimage"
    steps:
      - template: "docker/docker-build-image-and-push-to-gcr.yml@templates"
        parameters:
          imageName: $(imageName)
          repoName: $(repoName)
          gcrServiceConnection: "gcrServiceConnection-Freg"
          skipImageVulnerabilityScan: "true" # Try to reset to 'false' as soon as ubuntu base image is not reported as vulnerable

  # Pull and retag docker image. Will only run if it is a tag-operation on the repo.
  # See https://github.com/statisticsnorway/azure-pipelines-templates/blob/master/docker/docker-tag-for-production.yml
  - template: docker/docker-tag-for-production.yml@templates
    parameters:
      tagToTag: "main-$(fullSha)"
      gcrImageName: $(imageName)
